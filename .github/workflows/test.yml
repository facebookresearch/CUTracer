name: Test

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - "*.md"
      - ".gitignore"
      - "docs/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "*.md"
      - ".gitignore"
      - "docs/**"
  workflow_dispatch:
    inputs:
      test-type:
        description: "Type of tests to run"
        required: true
        default: "all"
        type: choice
        options:
          - "all"
          - "build-only"
          - "vectoradd"
      debug:
        description: "Enable debug build"
        required: true
        default: false
        type: boolean

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format

      - name: Run formatter check
        run: |
          ./format.sh check

  build-and-test:
    runs-on: 4-core-ubuntu-gpu-t4
    timeout-minutes: 60
    env:
      DEBUG: "0"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup environment
        env:
          CUDA_VERSION: "12.8"
        run: |
          bash .ci/setup.sh
      - name: Run tests
        env:
          TEST_TYPE: ${{ github.event.inputs.test-type || 'all' }}
          TIMEOUT: 60
          INSTALL_THIRD_PARTY: 1
        run: |
          bash .ci/run_tests.sh
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-cuda12.8-debug0
          path: |
            tests/vectoradd/*.sass
            tests/vectoradd/*.log
            tests/py_add/*.log
            tests/py_add/*.sass
  test-triton-source:
    runs-on: 4-core-ubuntu-gpu-t4
    timeout-minutes: 60
    env:
      DEBUG: "0"
      CONDA_ENV: "cutracer-triton-source"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup environment
        env:
          CUDA_VERSION: "12.8"
        run: |
          bash .ci/setup.sh
      - name: Install Triton from source
        run: |
          wget https://raw.githubusercontent.com/meta-pytorch/tritonparse/refs/heads/main/.ci/install-triton.sh -O /tmp/install-triton.sh
          bash /tmp/install-triton.sh
      - name: Run tests
        env:
          TEST_TYPE: proton
          TIMEOUT: 60
          INSTALL_THIRD_PARTY: 1
        run: |
          bash .ci/run_tests.sh
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-triton-cuda12.8-debug0
          path: |
            tests/proton_tests/*.log
            tests/proton_tests/*.sass
            tests/proton_tests/*.csv
  check-status:
    runs-on: ubuntu-latest
    needs: [build-and-test, test-triton-source]
    if: always()
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.build-and-test.result }}" = "success" ] && [ "${{ needs.test-triton-source.result }}" = "success" ]; then
              echo "✅ All tests passed!"
          else
              echo "❌ Some tests failed!"
              exit 1
          fi
